# Test Environment Configuration Template
# Copy this file to .env.test for running tests
# Use environment variables or GitHub Secrets for CI/CD

# =============================================================================
# TEST ENVIRONMENT SETTINGS
# =============================================================================
ENVIRONMENT=test
DEBUG=true
LOG_LEVEL=DEBUG

# =============================================================================
# TEST DATABASE CONFIGURATION
# =============================================================================
# Use environment variables to avoid hardcoding credentials
TEST_DATABASE_URL=${TEST_DATABASE_URL}
TEST_REDIS_URL=${TEST_REDIS_URL}
TEST_GEMINI_API_KEY=${TEST_GEMINI_API_KEY}

# Alternative: Use separate components for local testing
# TEST_DB_HOST=localhost
# TEST_DB_PORT=5432
# TEST_DB_NAME=test_webscraper
# TEST_DB_USER=test_user
# TEST_DB_PASSWORD=generate_random_password_for_tests

# =============================================================================
# TEST SECURITY SETTINGS
# =============================================================================
# Generate test-specific secrets (different from production)
TEST_SECRET_KEY=test_secret_key_generate_with_openssl_rand_hex_32
TEST_JWT_SECRET=test_jwt_secret_different_from_production

# =============================================================================
# TEST SCRAPING CONFIGURATION
# =============================================================================
# Use generic user agents for testing
TEST_USER_AGENTS="Mozilla/5.0 (compatible; TestBot/1.0)|Mozilla/5.0 (compatible; IntegrationTest/1.0)"

# Test-safe URLs (use httpbin.org or similar test services)
TEST_BASE_URL=https://httpbin.org
TEST_TIMEOUT=10
TEST_MAX_RETRIES=2

# =============================================================================
# SECURITY NOTES FOR TESTING
# =============================================================================
# 1. Never use production credentials in tests
# 2. Use environment variables for all sensitive data
# 3. Generate unique test credentials for each environment
# 4. Use generic user agents to prevent fingerprinting
# 5. Use test services like httpbin.org for external requests
# 6. Set short timeouts to prevent hanging tests
# 7. Disable unnecessary features for faster test execution
# 8. Use GitHub Secrets for CI/CD credentials